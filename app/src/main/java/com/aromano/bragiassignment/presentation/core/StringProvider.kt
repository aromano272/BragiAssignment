package com.aromano.bragiassignment.presentation.core

import android.content.res.Resources
import androidx.annotation.PluralsRes
import androidx.annotation.StringRes


interface StringProvider {
    fun getQuantityText(@PluralsRes id: Int, quantity: Int): CharSequence
    fun getString(@StringRes id: Int): String
    fun getString(@StringRes id: Int, vararg formatArgs: Any): String
    fun getQuantityString(@PluralsRes id: Int, quantity: Int, vararg formatArgs: Any): String
    fun getQuantityString(@PluralsRes id: Int, quantity: Int): String
    fun getText(@StringRes id: Int, def: CharSequence?): CharSequence
}

class AndroidStringProvider(
    private val resources: Resources,
) : StringProvider {
    /**
     * Returns the character sequence necessary for grammatically correct pluralization
     * of the given resource ID for the given quantity.
     * Note that the character sequence is selected based solely on grammatical necessity,
     * and that such rules differ between languages. Do not assume you know which string
     * will be returned for a given quantity. See
     * [String Resources]({@docRoot}guide/topics/resources/string-resource.html#Plurals)
     * for more detail.
     *
     * @param id The desired resource identifier, as generated by the aapt
     * tool. This integer encodes the package, type, and resource
     * entry. The value 0 is an invalid identifier.
     * @param quantity The number used to get the correct string for the current language's
     * plural rules.
     *
     * @throws NotFoundException Throws NotFoundException if the given ID does not exist.
     *
     * @return CharSequence The string data associated with the resource, plus
     * possibly styled text information.
     */
    @Throws(Resources.NotFoundException::class)
    override fun getQuantityText(@PluralsRes id: Int, quantity: Int): CharSequence =
        resources.getQuantityText(id, quantity)

    /**
     * Return the string value associated with a particular resource ID.  It
     * will be stripped of any styled text information.
     * {@more}
     *
     * @param id The desired resource identifier, as generated by the aapt
     * tool. This integer encodes the package, type, and resource
     * entry. The value 0 is an invalid identifier.
     *
     * @throws NotFoundException Throws NotFoundException if the given ID does not exist.
     *
     * @return String The string data associated with the resource,
     * stripped of styled text information.
     */
    @Throws(Resources.NotFoundException::class)
    override fun getString(@StringRes id: Int): String =
        resources.getString(id)


    /**
     * Return the string value associated with a particular resource ID,
     * substituting the format arguments as defined in [java.util.Formatter]
     * and [java.lang.String.format]. It will be stripped of any styled text
     * information.
     * {@more}
     *
     * @param id The desired resource identifier, as generated by the aapt
     * tool. This integer encodes the package, type, and resource
     * entry. The value 0 is an invalid identifier.
     *
     * @param formatArgs The format arguments that will be used for substitution.
     *
     * @throws NotFoundException Throws NotFoundException if the given ID does not exist.
     *
     * @return String The string data associated with the resource,
     * stripped of styled text information.
     */
    @Throws(Resources.NotFoundException::class)
    override fun getString(@StringRes id: Int, vararg formatArgs: Any): String =
        resources.getString(id, *formatArgs)

    /**
     * Formats the string necessary for grammatically correct pluralization
     * of the given resource ID for the given quantity, using the given arguments.
     * Note that the string is selected based solely on grammatical necessity,
     * and that such rules differ between languages. Do not assume you know which string
     * will be returned for a given quantity. See
     * [String Resources]({@docRoot}guide/topics/resources/string-resource.html#Plurals)
     * for more detail.
     *
     *
     * Substitution of format arguments works as if using
     * [java.util.Formatter] and [java.lang.String.format].
     * The resulting string will be stripped of any styled text information.
     *
     * @param id The desired resource identifier, as generated by the aapt
     * tool. This integer encodes the package, type, and resource
     * entry. The value 0 is an invalid identifier.
     * @param quantity The number used to get the correct string for the current language's
     * plural rules.
     * @param formatArgs The format arguments that will be used for substitution.
     *
     * @throws NotFoundException Throws NotFoundException if the given ID does not exist.
     *
     * @return String The string data associated with the resource,
     * stripped of styled text information.
     */
    @Throws(Resources.NotFoundException::class)
    override fun getQuantityString(@PluralsRes id: Int, quantity: Int, vararg formatArgs: Any): String =
        resources.getQuantityString(id, quantity, *formatArgs)

    /**
     * Returns the string necessary for grammatically correct pluralization
     * of the given resource ID for the given quantity.
     * Note that the string is selected based solely on grammatical necessity,
     * and that such rules differ between languages. Do not assume you know which string
     * will be returned for a given quantity. See
     * [String Resources]({@docRoot}guide/topics/resources/string-resource.html#Plurals)
     * for more detail.
     *
     * @param id The desired resource identifier, as generated by the aapt
     * tool. This integer encodes the package, type, and resource
     * entry. The value 0 is an invalid identifier.
     * @param quantity The number used to get the correct string for the current language's
     * plural rules.
     *
     * @throws NotFoundException Throws NotFoundException if the given ID does not exist.
     *
     * @return String The string data associated with the resource,
     * stripped of styled text information.
     */
    @Throws(Resources.NotFoundException::class)
    override fun getQuantityString(@PluralsRes id: Int, quantity: Int): String =
        resources.getQuantityString(id, quantity)

    /**
     * Return the string value associated with a particular resource ID.  The
     * returned object will be a String if this is a plain string; it will be
     * some other type of CharSequence if it is styled.
     *
     * @param id The desired resource identifier, as generated by the aapt
     * tool. This integer encodes the package, type, and resource
     * entry. The value 0 is an invalid identifier.
     *
     * @param def The default CharSequence to return.
     *
     * @return CharSequence The string data associated with the resource, plus
     * possibly styled text information, or def if id is 0 or not found.
     */
    override fun getText(@StringRes id: Int, def: CharSequence?): CharSequence =
        resources.getText(id, def)
}
